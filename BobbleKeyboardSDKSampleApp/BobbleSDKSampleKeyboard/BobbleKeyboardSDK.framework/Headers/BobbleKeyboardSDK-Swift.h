// Generated by Apple Swift version 4.1 effective-3.3 (swiftlang-902.0.48 clang-902.0.37.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
@import Foundation;
@import CoreFoundation;
#endif

#import <BobbleKeyboardSDK/BobbleKeyboardSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BobbleKeyboardSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UIScrollView;
@class NSArray;
@class UIButton;
@class NSCoder;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK25BLEmojiCategoryScrollView")
@interface BLEmojiCategoryScrollView : UIView
@property (nonatomic, strong) UIScrollView * _Nullable scrollView;
@property (nonatomic, strong) NSArray * _Nonnull itemViewArray;
@property (nonatomic, readonly) CGFloat kYSLScrollMenuViewWidth;
@property (nonatomic, readonly) CGFloat kYSLScrollMenuViewMargin;
@property (nonatomic, readonly) CGFloat kYSLIndicatorHeight;
@property (nonatomic, readonly, strong) UIView * _Nonnull selectedItemView;
@property (nonatomic, strong) NSArray * _Nonnull itemArray;
- (void)setSelectedItemView;
- (void)setItemColorWithCurrentIndex:(NSInteger)currentIndex;
- (void)itemViewTapActionWithSender:(UIButton * _Nonnull)sender;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionViewCell;
@class UICollectionViewLayout;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK21BLEmojiCollectionView")
@interface BLEmojiCollectionView : UICollectionView <UICollectionViewDataSource, UICollectionViewDelegate>
@property (nonatomic, strong) NSArray * _Nonnull emojis;
- (void)setupWithData:(NSArray * _Nonnull)data;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK25BLEmojiCollectionViewCell")
@interface BLEmojiCollectionViewCell : UICollectionViewCell
@property (nonatomic, strong) UILabel * _Null_unspecified label;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class SwipeView;
@class UIColor;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK22BLEmoticonKeyboardView")
@interface BLEmoticonKeyboardView : UIView <SwipeViewDataSource, SwipeViewDelegate>
@property (nonatomic) NSInteger currentIndex;
@property (nonatomic, strong) UIView * _Nonnull category_highlight_view;
@property (nonatomic) CGFloat emojiCategoryButtonWidth;
@property (nonatomic, strong) SwipeView * _Nullable emojiButtonView;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull currentArray;
@property (nonatomic, strong) UIButton * _Nonnull modeChangeButton;
@property (nonatomic, strong) UIButton * _Nonnull backSpaceButton;
@property (nonatomic, strong) BLEmojiCategoryScrollView * _Nullable categoryView;
@property (nonatomic, readonly, strong) UIColor * _Nonnull darkTheme;
@property (nonatomic, readonly, strong) UIColor * _Nonnull lightTheme;
@property (nonatomic) BOOL dark_mode;
- (UIColor * _Nonnull)hexStringToUIColorWithHex:(NSString * _Nonnull)hex SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)backspaceUp;
- (void)backspaceDown;
- (void)modeChange;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)numberOfItemsInSwipeView:(SwipeView * _Null_unspecified)swipeView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Null_unspecified)swipeView:(SwipeView * _Null_unspecified)swipeView viewForItemAtIndex:(NSInteger)index reusingView:(UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
- (CGSize)swipeViewItemSize:(SwipeView * _Null_unspecified)swipeView SWIFT_WARN_UNUSED_RESULT;
- (void)swipeViewCurrentItemIndexDidChange:(SwipeView * _Null_unspecified)swipeView;
- (void)scrollMenuViewSelectedIndexWithIndex:(NSInteger)index;
- (void)emojiTappedWithText:(NSString * _Nonnull)text sender:(BLEmojiCollectionViewCell * _Nonnull)sender;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK17BLEmoticonManager")
@interface BLEmoticonManager : NSObject
+ (void)saveRecentEmoji:(NSString * _Nonnull)text;
+ (NSArray<NSString *> * _Nonnull)emoji_category_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)emoction_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)animals_n_nature_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)food_n_drink_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)activity_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)travel_n_places_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)office_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)miscallenous_array SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)flags SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK17BLKeyboardUtility")
@interface BLKeyboardUtility : NSObject
+ (BOOL)canDisplayUnicodeWithUnicode:(NSString * _Nonnull)unicode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP17BobbleKeyboardSDK27BLSuggestionsBannerDelegate_")
@protocol BLSuggestionsBannerDelegate
- (void)openKeyboardView;
- (void)wordTapped:(NSString * _Nonnull)word tag:(NSInteger)tag;
@optional
- (void)toggleSettingsView:(BOOL)open;
@end


SWIFT_PROTOCOL("_TtP17BobbleKeyboardSDK23DefaultSettingsDelegate_")
@protocol DefaultSettingsDelegate
- (void)wordSuggestionsOn;
- (void)ArabicClicked;
- (void)EnglishClicked;
@end

@class NSDate;
@class TextInputView;
@class ForwardingView;
@class KeyboardLayout;
@class NSLayoutConstraint;
@class ExtraView;
@class NSTimer;
@class NSBundle;
@class NSNotification;
@class UITraitCollection;
@protocol UIViewControllerTransitionCoordinator;
@class KeyboardKey;
@protocol UITextInput;
@class LayoutConstants;
@class GlobalColors;
@class KeyboardThemeModel;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK22KeyboardViewController")
@interface KeyboardViewController : UIInputViewController <DefaultSettingsDelegate>
@property (nonatomic, strong) NSDate * _Nullable firstDate;
@property (nonatomic, readonly) NSTimeInterval backspaceDelay;
@property (nonatomic, strong) TextInputView * _Null_unspecified currentActiveInputView;
@property (nonatomic, readonly) NSTimeInterval backspaceRepeat;
@property (nonatomic, strong) ForwardingView * _Null_unspecified forwardingView;
@property (nonatomic, strong) ForwardingView * _Null_unspecified ArabicforwardingView;
@property (nonatomic, strong) KeyboardLayout * _Nullable layout;
@property (nonatomic, strong) KeyboardLayout * _Nullable arabicLayout;
@property (nonatomic, strong) NSLayoutConstraint * _Nullable heightConstraint;
@property (nonatomic) BOOL isArabicModeOn;
@property (nonatomic) BOOL isTopBar;
@property (nonatomic) BOOL isCustomView;
@property (nonatomic) BOOL isBannerView;
@property (nonatomic) BOOL isForwordView;
@property (nonatomic) BOOL isOverlay;
@property (nonatomic, strong) UIView * _Nonnull topBarView;
@property (nonatomic, strong) UIView * _Nonnull customView;
@property (nonatomic, strong) UIView * _Nonnull overlayView;
@property (nonatomic, strong) ExtraView * _Nullable bannerView;
@property (nonatomic, strong) ExtraView * _Nullable bannerV;
@property (nonatomic, strong) UIView * _Nullable customBarView;
@property (nonatomic, strong) ExtraView * _Nullable settingsView;
@property (nonatomic) BOOL swipeKeyMode;
@property (nonatomic) BOOL check;
@property (nonatomic) NSInteger currentMode;
@property (nonatomic, readonly) BOOL backspaceActive;
@property (nonatomic, strong) NSTimer * _Nullable backspaceDelayTimer;
@property (nonatomic, strong) NSTimer * _Nullable backspaceRepeatTimer;
@property (nonatomic) NSInteger lastCharCountInBeforeContext;
@property (nonatomic, copy) NSArray<NSValue *> * _Nonnull keyFramesArray;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull keyCharArray;
- (void)keyFramesValuesChanged;
- (void)returnClicked;
- (void)launchEmojiKeyboard;
- (void)resetTheUpdateAndSearchString;
- (void)optionsTapped;
- (void)wordSuggestionsOn;
@property (nonatomic) BOOL shiftWasMultitapped;
@property (nonatomic) CGFloat keyboardHeight;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (void)ArabicClicked;
- (void)EnglishClicked;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)defaultsChangedWithNotification:(NSNotification * _Nonnull)notification;
@property (nonatomic, strong) UIView * _Nullable kludge;
- (void)setupKludge;
@property (nonatomic) BOOL constraintsAdded;
- (void)setupLayout;
- (BOOL)darkMode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)solidColorMode SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
- (void)changeKeyboardLanguageWithValue:(NSString * _Nonnull)value;
- (void)addViewOnSuggestionBarWithView:(UIView * _Nonnull)view;
- (void)addTopBarViewWithViewForTopBar:(UIView * _Nonnull)viewForTopBar;
- (void)openCustomWithViewForCustom:(UIView * _Nonnull)viewForCustom;
- (void)restoreInput;
- (void)openKeyboardWithTextView:(TextInputView * _Nonnull)textView;
- (void)dismissCustom;
- (void)hideTopBarView;
- (void)showTopBarView;
- (void)showOverlayViewWithOverlayV:(UIView * _Nonnull)overlayV;
- (void)hideOverlayView;
- (void)dismissOtherViewsIfOpen;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
- (CGFloat)heightForOrientationWithOrientation:(UIInterfaceOrientation)orientation withTopBanner:(BOOL)withTopBanner SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)getheightForOrientationWithOrientation:(UIInterfaceOrientation)orientation withTopBanner:(BOOL)withTopBanner withTopBar:(BOOL)withTopBar withCustomView:(BOOL)withCustomView withKeyboardView:(BOOL)withKeyboardView SWIFT_WARN_UNUSED_RESULT;
- (void)setupKeys;
- (void)spaceKeyIdentifierFunction;
- (void)addCharacterToListWithSender:(KeyboardKey * _Nonnull)sender;
/// //////////////
@property (nonatomic, strong) KeyboardKey * _Nullable keyWithDelayedPopup;
@property (nonatomic, strong) NSTimer * _Nullable popupDelayTimer;
- (void)showPopupWithSender:(KeyboardKey * _Nonnull)sender;
- (void)shiftTheCursorLeft;
- (void)shiftTheCursorRight;
- (void)dismissKeyboard;
- (void)hidePopupDelayWithSender:(KeyboardKey * _Nonnull)sender;
- (void)hidePopupCallback;
/// //////////////////
- (void)setModeForKeyboardInLandscape:(NSInteger)keyboardType returnType:(NSInteger)returnType;
- (void)setModeForKeyboard:(NSInteger)keyboardType returnType:(NSInteger)returnType;
@property (nonatomic) NSInteger returnType;
@property (nonatomic) NSInteger keyboardType;
@property (nonatomic, readonly, copy) NSString * _Nonnull modelName;
- (void)selectionWillChange:(id <UITextInput> _Nullable)textInput;
- (void)selectionDidChange:(id <UITextInput> _Nullable)textInput;
- (void)textDidChange:(id <UITextInput> _Nullable)textInput;
- (void)contextChanged;
- (void)setHeightWithHeight:(CGFloat)height;
- (void)updateAppearancesWithAppearanceIsDark:(BOOL)appearanceIsDark;
- (void)arabicupdateAppearancesWithAppearanceIsDark:(BOOL)appearanceIsDark;
- (void)highlightKeyWithSender:(KeyboardKey * _Nonnull)sender;
- (void)unHighlightKeyWithSender:(KeyboardKey * _Nonnull)sender;
- (void)keyPressedHelperWithSender:(KeyboardKey * _Nonnull)sender;
- (void)cancelBackspaceTimers;
- (void)backspaceDownWithSender:(id _Nonnull)sender;
- (void)backspaceUpWithSender:(id _Nonnull)sender;
- (void)backspaceDelayCallback;
- (void)backspaceRepeatCallback;
- (void)shiftDownWithSender:(KeyboardKey * _Nonnull)sender;
- (void)shiftUpWithSender:(KeyboardKey * _Nonnull)sender;
- (void)shiftDoubleTappedWithSender:(KeyboardKey * _Nonnull)sender;
- (void)updateKeyCapsWithUppercase:(BOOL)uppercase;
- (void)arabicupdateKeyCapsWithUppercase:(BOOL)uppercase;
- (void)modeChangeTappedWithSender:(KeyboardKey * _Nonnull)sender;
- (void)longPressTapped;
- (void)setModeWithMode:(NSInteger)mode;
- (void)arabicSetModeWithMode:(NSInteger)mode;
- (void)advanceTappedWithSender:(id _Nonnull)sender;
- (void)toggleSettingsWithHide:(BOOL)hide;
- (BOOL)setCapsIfNeeded SWIFT_WARN_UNUSED_RESULT;
- (BOOL)stringIsWhitespaceWithString:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldAutoCapitalize SWIFT_WARN_UNUSED_RESULT;
- (void)playKeySound;
/// ///////////////////////////////////
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(KeyboardLayout) _Nonnull layoutClass;)
+ (SWIFT_METATYPE(KeyboardLayout) _Nonnull)layoutClass SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(LayoutConstants) _Nonnull layoutConstants;)
+ (SWIFT_METATYPE(LayoutConstants) _Nonnull)layoutConstants SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(GlobalColors) _Nonnull globalColors;)
+ (SWIFT_METATYPE(GlobalColors) _Nonnull)globalColors SWIFT_WARN_UNUSED_RESULT;
- (ExtraView * _Nullable)createBanner SWIFT_WARN_UNUSED_RESULT;
- (void)setBannerWithView:(UIView * _Nonnull)view;
- (ExtraView * _Nullable)createSettings SWIFT_WARN_UNUSED_RESULT;
- (void)themeChangeAccordinglyWithThemeObject:(KeyboardThemeModel * _Nullable)themeObject;
- (UIColor * _Nonnull)hexStringToUIColorWithHex:(NSString * _Nonnull)hex SWIFT_WARN_UNUSED_RESULT;
- (void)toggleSettingsForBack;
@end

@class BLWordSuggestions;
@class UITextChecker;
@class NSOperationQueue;
@class NSMutableArray;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK24BLKeyboardViewController")
@interface BLKeyboardViewController : KeyboardViewController <BLSuggestionsBannerDelegate>
@property (nonatomic, strong) BLWordSuggestions * _Nullable indicSpellChecker;
@property (nonatomic, strong) UITextChecker * _Nullable spellChecker;
@property (nonatomic) BOOL backspaceTapped;
@property (nonatomic, readonly) CGFloat topBarHeight;
@property (nonatomic, strong) NSOperationQueue * _Nullable serialQueue;
@property (nonatomic) BOOL autoCorrectCurrentSession;
@property (nonatomic, copy) NSString * _Nonnull searchString;
- (void)updateSearchString;
- (BLEmoticonKeyboardView * _Nonnull)getSecondEmoction_Keyboardview SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) BLEmoticonKeyboardView * _Nullable second_emoction_KeyboardView;
@property (nonatomic) BOOL appNotYetOpened;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull emojiJsonMap;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull wordsJson;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull emojiSymbols;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)launchEmojiKeyboard;
- (void)resetTheUpdateAndSearchString;
- (void)backspaceDownWithSender:(id _Nonnull)sender;
- (void)backspaceRepeatCallback;
- (BOOL)shouldAutoCapitalize SWIFT_WARN_UNUSED_RESULT;
- (void)setupKeys;
- (void)returnClicked;
- (ExtraView * _Nullable)createBanner SWIFT_WARN_UNUSED_RESULT;
- (void)setBannerWithView:(UIView * _Nonnull)viewSuggestion;
- (void)dismissOtherViewsIfOpen;
- (void)keyFramesValuesChanged;
- (void)setupInitialState;
- (void)toggleSettingsView:(BOOL)open;
- (void)openKeyboardView;
- (void)openSearchView;
- (BOOL)isEmojiWithWord:(NSString * _Nonnull)word SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isKeyPresentInUserDefaultsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)wordTapped:(NSString * _Nonnull)word tag:(NSInteger)tag;
- (NSString * _Nonnull)searchText SWIFT_WARN_UNUSED_RESULT;
- (void)removeAppNotOpenedView;
- (void)showToastMessageForErrorWithMessage:(NSString * _Nonnull)message;
- (void)emoctionSelectedSEWithEmoction:(NSString * _Nonnull)emoction;
- (void)dismissTheEmoctionKeyboardSE;
- (void)dismissTheEmoctionKeyboard;
- (void)backspaceDownEmoctionSE;
- (void)backspaceUpEmoctionSE;
- (void)backspaceUpEmoction;
- (void)backspaceDownEmoction;
- (void)keyboardGotDismissed;
- (void)toggleKeyboardEnabledBooleanWithActivate:(BOOL)activate;
- (void)globeClickedWithSender:(id _Nonnull)sender;
- (void)emojiClickedWithSender:(id _Nonnull)sender;
- (void)settingsClickedWithSender:(id _Nonnull)sender;
- (void)setUpSpellChecker;
- (void)removeSpellChecker;
- (void)setOrderedKeyFrameValues;
- (NSDictionary<NSString *, NSString *> * _Nonnull)getTheCurrentAndPrevWordFromSentenceWithSentence:(NSString * _Nonnull)sentence SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTheCurrentWordFromSentenceWithSentence:(NSString * _Nonnull)sentence forDeletion:(BOOL)forDeletion SWIFT_WARN_UNUSED_RESULT;
- (void)checkTheCurrentWordWithTouchPoint:(CGPoint)touchPoint;
- (void)switchSettingsStateWithValuesOn:(BOOL)on currWord:(NSString * _Nonnull)currWord prevWord:(NSString * _Nonnull)prevWord touchPoint:(CGPoint)touchPoint;
- (void)predictWordsForWord:(NSString * _Nonnull)word prevWord:(NSString * _Nonnull)prevWord touchPoint:(CGPoint)touchPoint;
- (void)suggestWordsForWord:(NSString * _Nonnull)word prevWord:(NSString * _Nonnull)prevWord touchPoint:(CGPoint)touchPoint;
- (void)checkPossibleUnicodesForSuggestionBarWithAmong:(NSMutableArray * _Nonnull)possibleCompletions;
- (void)setBannerWordButtonColorsWithAutoCorrect:(BOOL)autoCorrect;
- (void)autoCorrectWord;
- (void)deleteAndEnterWordWithWord:(NSString * _Nonnull)word correctword:(NSString * _Nonnull)correctword;
- (NSString * _Nonnull)getCurrentWord SWIFT_WARN_UNUSED_RESULT;
- (void)insertWordForFontWithWord:(NSString * _Nonnull)word;
- (void)wordSuggestionsOn;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK9ExtraView")
@interface ExtraView : UIView
@property (nonatomic) SWIFT_METATYPE(GlobalColors) _Nullable globalColors;
@property (nonatomic) BOOL darkMode;
@property (nonatomic) BOOL solidColorMode;
- (nonnull instancetype)initWithGlobalColors:(SWIFT_METATYPE(GlobalColors) _Nullable)globalColors darkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK19BLSuggestionsBanner")
@interface BLSuggestionsBanner : ExtraView
@property (nonatomic, strong) UIButton * _Nonnull settingsButton;
@property (nonatomic, strong) UIButton * _Nonnull keyboardButton;
@property (nonatomic, strong) UIButton * _Nonnull wordLabel_1;
@property (nonatomic, strong) UIButton * _Nonnull wordLabel_2;
@property (nonatomic, strong) UIButton * _Nonnull wordLabel_3;
@property (nonatomic) BOOL isSuggestionView;
@property (nonatomic, strong) UIView * _Nonnull suggestionView;
@property (nonatomic, readonly, strong) UIView * _Nonnull border12;
@property (nonatomic, readonly, strong) UIView * _Nonnull border23;
@property (nonatomic, strong) UIColor * _Nonnull buttonBackgroundColor;
@property (nonatomic, weak) id <BLSuggestionsBannerDelegate> _Nullable delegate;
@property (nonatomic) BOOL keyboardButtonEnabled;
- (nonnull instancetype)initWithGlobalColors:(SWIFT_METATYPE(GlobalColors) _Nullable)globalColors darkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode OBJC_DESIGNATED_INITIALIZER;
- (void)dismissSettingsScreen;
- (void)wordLabelTappedWithSender:(UIButton * _Nonnull)sender;
- (void)openSettingsWithSender:(UIButton * _Nonnull)sender;
- (void)openFontSettingsWithSender:(UIButton * _Nonnull)sender;
- (void)shuffleSettingsOptionsWithValue:(BOOL)value;
- (void)addCreateStickerButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setNeedsLayout;
- (void)setBannerViewWithView:(UIView * _Nonnull)view;
- (void)layoutSubviews;
- (void)toggleTextInputMode:(BOOL)show;
- (void)shuffleBannerButtonsInteractionWithEnable:(BOOL)enable;
@end


@class OverflowCanvas;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK5Shape")
@interface Shape : UIView
@property (nonatomic, strong) UIColor * _Nullable color;
@property (nonatomic, strong) OverflowCanvas * _Null_unspecified overflowCanvas;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)drawCallWithColor:(UIColor * _Nonnull)color;
@end


/// ////////////////
SWIFT_CLASS("_TtC17BobbleKeyboardSDK14BackspaceShape")
@interface BackspaceShape : Shape
- (void)drawCallWithColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK20BobbleCallBackString")
@interface BobbleCallBackString : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Custom keyboard view controller
SWIFT_CLASS("_TtC17BobbleKeyboardSDK28BobbleKeyboardViewController")
@interface BobbleKeyboardViewController : BLKeyboardViewController
/// Show custom View in keyboard’s top bar place holder.
/// remark:
/// The view should be of a standard height; 45pt.
/// precondition:
/// <code>view</code> should not be nil.
/// \param view The view that needs to be shown.
///
- (void)setTopBarWithView:(UIView * _Nonnull)view;
/// Show a custom view in the custom view container. When this is called, the keyboard input view is closed and the custom view is shown. If already a custom view is visible, it is replaced by the newly provided custom view.
/// remark:
/// The view should be of the same height as the keyboard.
/// precondition:
/// <code>view</code> should not be nil.
/// \param view The view that needs to be shown.
///
- (void)showCustomViewWithView:(UIView * _Nonnull)view;
/// Show keyboard input view in case it was hidden due to previous call to showCustomView(View) and custom view was visible. Calling showKeyboardView() will close visible custom view (if any) and will show keyboard input view.
- (void)showKeyboardView;
/// The custom class that extends BobbleKeyboardViewController can call setInputTarget(TextInputView) API to set input method interaction target programmatically. The input target that is passed as argument to this API must extend TextInputView and its visible in any custom view container (top bar or main custom view) previously.
/// precondition:
/// <code>textView</code> should not be nil.
/// \param textView The view that needs to be shown.
///
- (void)setInputTargetWithTextView:(TextInputView * _Nonnull)textView;
/// The custom class that extends BobbleKeyboardViewController can call restoreInputTarget() API to restore input transaction back to host app. If a custom view was visible previously and also keyboard input view was visible, then only custom view is shown and keyboard input view is closed. After this API is called, any input interaction will be performed on the host app until and unless user does not manually focuses to a text field inside custom view
- (void)restoreInputTarget;
/// The custom class that extends BobbleKeyboardViewController can call setKeyboardLanguage() API to set the language of the keyboard. language could take string values “ar” or “en”.
/// precondition:
/// <code>value</code> should not be nil.
/// <ul>
///   <li>
///     Parameter: “en” for English and “ar” for Arabic.
///   </li>
/// </ul>
- (void)setKeyboardLanguageWithValue:(NSString * _Nonnull)value;
/// The custom class that extends BobbleKeyboardViewController can call showTopBar() API to control the visibility of the top bar.
/// precondition:
/// <code>Top bar</code> should be added.
- (void)showTopBar;
/// The custom class that extends BobbleKeyboardViewController can call hideTopBar() API to hide the visibility of the top bar.
/// precondition:
/// <code>Top bar</code> should be visible.
- (void)hideTopBar;
/// The custom class that extends BobbleKeyboardViewController can call showOverlay() API to render the passed along view ontop of the visible keyboard area.This view should allow for transparency so that the keyboard beneath may be visible
/// precondition:
/// <code>keyboard area</code> should be visible.
/// \param view The view that needs to be shown as a overlay.
///
- (void)showOverlayWithView:(UIView * _Nonnull)view;
/// The custom class that extends BobbleKeyboardViewController can call hideOverlay() API to hide the overlay view.
/// precondition:
/// <code>overlay view</code> should be visible.
- (void)hideOverlay;
/// The custom class that extends BobbleKeyboardViewController can call loadSuggestionView() API to load the passed in view onto the suggestion bar.
/// \param view The view that needs to be add in Suggestion Bar.
///
- (void)loadSuggestionViewWithView:(UIView * _Nonnull)view;
- (void)loadThemeWithThemeObject:(KeyboardThemeModel * _Nullable)themeObject;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class UITableViewCell;
@class UISwitch;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK15DefaultSettings")
@interface DefaultSettings : ExtraView <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) id <DefaultSettingsDelegate> _Nullable delegate;
@property (nonatomic, strong) UITableView * _Nullable tableView;
@property (nonatomic) BOOL darkMode;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull settingsNames;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull settingsNotes;
- (nonnull instancetype)initWithGlobalColors:(SWIFT_METATYPE(GlobalColors) _Nullable)globalColors darkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)initalizeTableView;
- (void)layoutSubviews;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)hexStringToUIColorWithHex:(NSString * _Nonnull)hex SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)updateAppearanceWithDark:(BOOL)dark;
- (void)toggleSettingWithSender:(UISwitch * _Nonnull)sender;
@end


@class UITextView;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK28DefaultSettingsTableViewCell")
@interface DefaultSettingsTableViewCell : UITableViewCell
@property (nonatomic, strong) UISwitch * _Nonnull sw;
@property (nonatomic, strong) UILabel * _Nonnull label;
@property (nonatomic, strong) UITextView * _Nonnull longLabel;
@property (nonatomic) BOOL constraintsSetForLongLabel;
@property (nonatomic, copy) NSArray<NSLayoutConstraint *> * _Nonnull cellConstraints;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addConstraints;
- (void)changeConstraints;
@end

typedef SWIFT_ENUM(NSInteger, Direction) {
  DirectionLeft = 0,
  DirectionDown = 3,
  DirectionRight = 2,
  DirectionUp = 1,
};


@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK14ForwardingView")
@interface ForwardingView : UIView
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull VelocityArray;
@property (nonatomic, strong) NSTimer * _Nullable timer;
@property (nonatomic) BOOL timerOn;
@property (nonatomic, copy) NSDictionary<UITouch *, UIView *> * _Nonnull touchToView;
@property (nonatomic) BOOL previousPosition_Swipable;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)handleControlWithView:(UIView * _Nullable)view controlEvent:(UIControlEvents)controlEvent;
- (BOOL)isBackspaceButtonWithView:(UIView * _Nonnull)view SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isSpaceButtonWithView:(UIView * _Nonnull)view SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)findNearestViewWithPosition:(CGPoint)position SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)distanceBetweenWithRect:(CGRect)rect point:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
- (void)resetTrackedViews;
- (BOOL)ownViewWithNewTouch:(UITouch * _Nonnull)newTouch viewToOwn:(UIView * _Nullable)viewToOwn SWIFT_WARN_UNUSED_RESULT;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (CGFloat)getVelocityWithInitialPoint:(CGPoint)initialPoint finalPoint:(CGPoint)finalPoint time:(CFTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getOffsetForVelocity:(CGFloat)velocity SWIFT_WARN_UNUSED_RESULT;
- (void)performCursorMovementWithCurrentTime:(CFAbsoluteTime)currentTime currentLoc:(CGPoint)currentLoc;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK12GlobalColors")
@interface GlobalColors : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeRegularKey;)
+ (UIColor * _Nonnull)lightModeRegularKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeRegularKey;)
+ (UIColor * _Nonnull)darkModeRegularKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeSolidColorRegularKey;)
+ (UIColor * _Nonnull)darkModeSolidColorRegularKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeSpecialKey;)
+ (UIColor * _Nonnull)lightModeSpecialKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeSolidColorSpecialKey;)
+ (UIColor * _Nonnull)lightModeSolidColorSpecialKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeSpecialKey;)
+ (UIColor * _Nonnull)darkModeSpecialKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeSolidColorSpecialKey;)
+ (UIColor * _Nonnull)darkModeSolidColorSpecialKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeShiftKeyDown;)
+ (UIColor * _Nonnull)darkModeShiftKeyDown SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModePopup;)
+ (UIColor * _Nonnull)lightModePopup SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModePopup;)
+ (UIColor * _Nonnull)darkModePopup SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeSolidColorPopup;)
+ (UIColor * _Nonnull)darkModeSolidColorPopup SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull returnKeySolidBlueColor;)
+ (UIColor * _Nonnull)returnKeySolidBlueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeUnderColor;)
+ (UIColor * _Nonnull)lightModeUnderColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeUnderColor;)
+ (UIColor * _Nonnull)darkModeUnderColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeTextColor;)
+ (UIColor * _Nonnull)lightModeTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeTextColor;)
+ (UIColor * _Nonnull)darkModeTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightModeBorderColor;)
+ (UIColor * _Nonnull)lightModeBorderColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkModeBorderColor;)
+ (UIColor * _Nonnull)darkModeBorderColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)regularKeyWithDarkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)popupWithDarkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)specialKeyWithDarkMode:(BOOL)darkMode solidColorMode:(BOOL)solidColorMode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK10GlobeShape")
@interface GlobeShape : Shape
- (void)drawCallWithColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol KeyboardKeyProtocol;
@class KeyboardKeyBackground;
@class KeyboardConnector;
@class ShapeView;
@class CALayer;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK11KeyboardKey")
@interface KeyboardKey : UIControl
@property (nonatomic, weak) id <KeyboardKeyProtocol> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) UIColor * _Nonnull color;
@property (nonatomic, strong) UIColor * _Nonnull underColor;
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
@property (nonatomic, strong) UIColor * _Nonnull popupColor;
@property (nonatomic) BOOL drawUnder;
@property (nonatomic) BOOL drawOver;
@property (nonatomic) BOOL drawBorder;
@property (nonatomic) CGFloat underOffset;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic, strong) UIColor * _Nullable downColor;
@property (nonatomic, strong) UIColor * _Nullable downUnderColor;
@property (nonatomic, strong) UIColor * _Nullable downBorderColor;
@property (nonatomic, strong) UIColor * _Nullable downTextColor;
@property (nonatomic) CGFloat labelInset;
@property (nonatomic) BOOL shouldRasterize;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic) CGRect frame;
@property (nonatomic, strong) UILabel * _Nonnull label;
@property (nonatomic, strong) UILabel * _Nullable popupLabel;
@property (nonatomic, strong) Shape * _Nullable shape;
@property (nonatomic, strong) KeyboardKeyBackground * _Nonnull background;
@property (nonatomic, strong) KeyboardKeyBackground * _Nullable popup;
@property (nonatomic, strong) KeyboardConnector * _Nullable connector;
@property (nonatomic, strong) ShapeView * _Nonnull displayView;
@property (nonatomic, strong) ShapeView * _Nullable borderView;
@property (nonatomic, strong) ShapeView * _Nullable underView;
@property (nonatomic, strong) UIView * _Nonnull shadowView;
@property (nonatomic, strong) CALayer * _Nonnull shadowLayer;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)setNeedsLayout;
- (void)layoutSubviews;
- (void)refreshViews;
- (void)refreshShapes;
- (void)layoutPopupIfNeeded;
- (void)redrawText;
- (void)redrawShape;
- (BOOL)isKeyPresentInUserDefaultsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)updateColors;
- (void)themeChangeWithNotification:(NSNotification * _Nonnull)notification;
- (UIColor * _Nonnull)hexStringToUIColorWithHex:(NSString * _Nonnull)hex SWIFT_WARN_UNUSED_RESULT;
- (void)layoutPopupWithDir:(enum Direction)dir;
- (void)configurePopupWithDirection:(enum Direction)direction;
- (void)showEmojiPopup;
- (void)showPopup;
- (void)hidePopup;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIImageView;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK8ImageKey")
@interface ImageKey : KeyboardKey
@property (nonatomic, strong) UIImageView * _Nullable image;
- (void)updateColors;
- (void)refreshShapes;
- (void)redrawImage;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIBezierPath;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK21KeyboardKeyBackground")
@interface KeyboardKeyBackground : UIView
@property (nonatomic, strong) UIBezierPath * _Nullable fillPath;
@property (nonatomic, strong) UIBezierPath * _Nullable underPath;
@property (nonatomic, copy) NSArray<UIBezierPath *> * _Nullable edgePaths;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat underOffset;
@property (nonatomic, copy) NSArray<NSValue *> * _Nonnull startingPoints;
@property (nonatomic, copy) NSArray<NSValue *> * _Nonnull arcCenters;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull arcStartingAngles;
@property (nonatomic) BOOL dirty;
@property (nonatomic) BOOL hideDirectionIsOpposite;
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius underOffset:(CGFloat)underOffset OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly) CGFloat floatPi;
@property (nonatomic, readonly) CGFloat floatPiDiv2;
@property (nonatomic, readonly) CGFloat floatPiDivNeg2;
- (void)generatePointsForDrawingWithBounds:(CGRect)bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK17KeyboardConnector")
@interface KeyboardConnector : KeyboardKeyBackground
@property (nonatomic, strong) UIView * _Nonnull start;
@property (nonatomic, strong) UIView * _Nonnull end;
@property (nonatomic) enum Direction startDir;
@property (nonatomic) enum Direction endDir;
@property (nonatomic) CGPoint offset;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (void)generateConvertedPoints;
- (void)resizeFrame;
- (void)generatePointsForDrawingWithBounds:(CGRect)bounds;
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius underOffset:(CGFloat)underOffset SWIFT_UNAVAILABLE;
@end




SWIFT_PROTOCOL("_TtP17BobbleKeyboardSDK19KeyboardKeyProtocol_")
@protocol KeyboardKeyProtocol
- (CGRect)frameForPopupWithKey:(KeyboardKey * _Nonnull)key direction:(enum Direction)direction SWIFT_WARN_UNUSED_RESULT;
- (void)willShowPopupWithKey:(KeyboardKey * _Nonnull)key direction:(enum Direction)direction;
- (void)willHidePopupWithKey:(KeyboardKey * _Nonnull)key;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK14KeyboardLayout")
@interface KeyboardLayout : NSObject <KeyboardKeyProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL shouldPoolKeys;)
+ (BOOL)shouldPoolKeys SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) SWIFT_METATYPE(LayoutConstants) _Nonnull layoutConstants;
@property (nonatomic) SWIFT_METATYPE(GlobalColors) _Nonnull globalColors;
@property (nonatomic, assign) UIView * _Nonnull superview;
@property (nonatomic, copy) NSArray<KeyboardKey *> * _Nonnull keyPool;
@property (nonatomic, copy) NSDictionary<NSString *, KeyboardKey *> * _Nonnull nonPooledMap;
@property (nonatomic, copy) NSDictionary<NSValue *, NSArray<KeyboardKey *> *> * _Nonnull sizeToKeyMap;
@property (nonatomic, copy) NSDictionary<NSString *, Shape *> * _Nonnull shapePool;
@property (nonatomic) BOOL darkMode;
@property (nonatomic) BOOL solidColorMode;
@property (nonatomic) BOOL initialized;
@property (nonatomic) CGFloat otherTypeKeyWidth;
- (void)initialize;
- (void)updateKeyAppearance;
- (KeyboardKey * _Nonnull)createNewKey SWIFT_WARN_UNUSED_RESULT;
- (KeyboardKey * _Nonnull)generateKey SWIFT_WARN_UNUSED_RESULT;
- (void)resetKeyPool;
- (Shape * _Nonnull)getShapeWithShapeClass:(SWIFT_METATYPE(Shape) _Nonnull)shapeClass SWIFT_WARN_UNUSED_RESULT;
/// ///////////////////
- (CGFloat)roundedWithMeasurement:(CGFloat)measurement SWIFT_WARN_UNUSED_RESULT;
/// /////////////
- (CGRect)frameForPopupWithKey:(KeyboardKey * _Nonnull)key direction:(enum Direction)direction SWIFT_WARN_UNUSED_RESULT;
- (void)willShowPopupWithKey:(KeyboardKey * _Nonnull)key direction:(enum Direction)direction;
- (void)willHidePopupWithKey:(KeyboardKey * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK18KeyboardThemeModel")
@interface KeyboardThemeModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull keyboardBackgroundColor;
@property (nonatomic, copy) NSString * _Nonnull keyColor;
@property (nonatomic, copy) NSString * _Nonnull suggestionBarColor;
@property (nonatomic, copy) NSString * _Nonnull suggestionDividerColor;
@property (nonatomic, copy) NSString * _Nonnull suggestionTextColor;
@property (nonatomic, copy) NSString * _Nonnull keyTextcolor;
@property (nonatomic, copy) NSString * _Nonnull keyBorderColor;
@property (nonatomic, copy) NSString * _Nonnull keyUnderLinecolor;
@property (nonatomic) BOOL isThemeDarkType;
- (nonnull instancetype)initWithKeyboardBackgroundColor:(NSString * _Nonnull)keyboardBackgroundColor keyColor:(NSString * _Nonnull)keyColor suggestionBarColor:(NSString * _Nonnull)suggestionBarColor suggestionDividerColor:(NSString * _Nonnull)suggestionDividerColor suggestionTextColor:(NSString * _Nonnull)suggestionTextColor keyTextcolor:(NSString * _Nonnull)keyTextcolor keyBorderColor:(NSString * _Nonnull)keyBorderColor keyUnderLinecolor:(NSString * _Nonnull)keyUnderLinecolor isThemeDarkType:(BOOL)isThemeDarkType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface KeyboardViewController (SWIFT_EXTENSION(BobbleKeyboardSDK))
- (void)addInputTraitsObservers;
- (void)pollTraits;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK15LayoutConstants")
@interface LayoutConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat landscapeRatio;)
+ (CGFloat)landscapeRatio SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull sideEdgesPortraitArray;)
+ (NSArray<NSNumber *> * _Nonnull)sideEdgesPortraitArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull sideEdgesPortraitWidthThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)sideEdgesPortraitWidthThreshholds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat sideEdgesLandscape;)
+ (CGFloat)sideEdgesLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull topEdgePortraitArray;)
+ (NSArray<NSNumber *> * _Nonnull)topEdgePortraitArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull topEdgePortraitWidthThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)topEdgePortraitWidthThreshholds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat topEdgeLandscape;)
+ (CGFloat)topEdgeLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull keyboardShrunkSizeArray;)
+ (NSArray<NSNumber *> * _Nonnull)keyboardShrunkSizeArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull keyboardShrunkSizeWidthThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)keyboardShrunkSizeWidthThreshholds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyboardShrunkSizeBaseWidthThreshhold;)
+ (CGFloat)keyboardShrunkSizeBaseWidthThreshhold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull rowGapPortraitArray;)
+ (NSArray<NSNumber *> * _Nonnull)rowGapPortraitArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull rowGapPortraitThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)rowGapPortraitThreshholds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat rowGapPortraitLastRow;)
+ (CGFloat)rowGapPortraitLastRow SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger rowGapPortraitLastRowIndex;)
+ (NSInteger)rowGapPortraitLastRowIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat rowGapLandscape;)
+ (CGFloat)rowGapLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapPortraitNormal;)
+ (CGFloat)keyGapPortraitNormal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapPortraitSmall;)
+ (CGFloat)keyGapPortraitSmall SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapPortraitNormalThreshhold;)
+ (CGFloat)keyGapPortraitNormalThreshhold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapPortraitUncompressThreshhold;)
+ (CGFloat)keyGapPortraitUncompressThreshhold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapLandscapeNormal;)
+ (CGFloat)keyGapLandscapeNormal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat keyGapLandscapeSmall;)
+ (CGFloat)keyGapLandscapeSmall SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger keyCompressedThreshhold;)
+ (NSInteger)keyCompressedThreshhold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat flexibleEndRowTotalWidthToKeyWidthMPortrait;)
+ (CGFloat)flexibleEndRowTotalWidthToKeyWidthMPortrait SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat flexibleEndRowTotalWidthToKeyWidthCPortrait;)
+ (CGFloat)flexibleEndRowTotalWidthToKeyWidthCPortrait SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat flexibleEndRowTotalWidthToKeyWidthMLandscape;)
+ (CGFloat)flexibleEndRowTotalWidthToKeyWidthMLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat flexibleEndRowTotalWidthToKeyWidthCLandscape;)
+ (CGFloat)flexibleEndRowTotalWidthToKeyWidthCLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat flexibleEndRowMinimumStandardCharacterWidth;)
+ (CGFloat)flexibleEndRowMinimumStandardCharacterWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat lastRowKeyGapPortrait;)
+ (CGFloat)lastRowKeyGapPortrait SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull lastRowKeyGapLandscapeArray;)
+ (NSArray<NSNumber *> * _Nonnull)lastRowKeyGapLandscapeArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull lastRowKeyGapLandscapeWidthThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)lastRowKeyGapLandscapeWidthThreshholds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat lastRowPortraitFirstTwoButtonAreaWidthToKeyboardAreaWidth;)
+ (CGFloat)lastRowPortraitFirstTwoButtonAreaWidthToKeyboardAreaWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat lastRowLandscapeFirstTwoButtonAreaWidthToKeyboardAreaWidth;)
+ (CGFloat)lastRowLandscapeFirstTwoButtonAreaWidthToKeyboardAreaWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat lastRowPortraitLastButtonAreaWidthToKeyboardAreaWidth;)
+ (CGFloat)lastRowPortraitLastButtonAreaWidthToKeyboardAreaWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat lastRowLandscapeLastButtonAreaWidthToKeyboardAreaWidth;)
+ (CGFloat)lastRowLandscapeLastButtonAreaWidthToKeyboardAreaWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat micButtonPortraitWidthRatioToOtherSpecialButtons;)
+ (CGFloat)micButtonPortraitWidthRatioToOtherSpecialButtons SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat popupGap;)
+ (CGFloat)popupGap SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat popupWidthIncrement;)
+ (CGFloat)popupWidthIncrement SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull popupTotalHeightArray;)
+ (NSArray<NSNumber *> * _Nonnull)popupTotalHeightArray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSNumber *> * _Nonnull popupTotalHeightDeviceWidthThreshholds;)
+ (NSArray<NSNumber *> * _Nonnull)popupTotalHeightDeviceWidthThreshholds SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)sideEdgesPortraitWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)topEdgePortraitWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)rowGapPortraitWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)rowGapPortraitLastRowWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)keyGapPortraitWithWidth:(CGFloat)width rowCharacterCount:(NSInteger)rowCharacterCount SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)keyGapLandscapeWithWidth:(CGFloat)width rowCharacterCount:(NSInteger)rowCharacterCount SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)lastRowKeyGapLandscapeWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)keyboardIsShrunkWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)keyboardShrunkSizeWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)popupTotalHeightWithDeviceWidth:(CGFloat)deviceWidth SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)findThreshholdWithElements:(NSArray<NSNumber *> * _Nonnull)elements threshholds:(NSArray<NSNumber *> * _Nonnull)threshholds measurement:(CGFloat)measurement SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)findThreshholdIndexWithThreshholds:(NSArray<NSNumber *> * _Nonnull)threshholds measurement:(CGFloat)measurement SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class CAShapeLayer;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK9ShapeView")
@interface ShapeView : UIView
@property (nonatomic, strong) CAShapeLayer * _Nullable shapeLayer;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIBezierPath * _Nullable curve;
@property (nonatomic, strong) UIColor * _Nullable fillColor;
@property (nonatomic, strong) UIColor * _Nullable strokeColor;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawCallWithRect:(CGRect)rect;
@end


SWIFT_CLASS("_TtC17BobbleKeyboardSDK10ShiftShape")
@interface ShiftShape : Shape
@property (nonatomic) BOOL withLock;
- (void)drawCallWithColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableString;
@class UIFont;

SWIFT_CLASS("_TtC17BobbleKeyboardSDK13TextInputView")
@interface TextInputView : UIScrollView <UIKeyInput>
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic, strong) NSMutableString * _Nonnull textStore;
@property (nonatomic, strong) UIButton * _Nullable blinkButton;
@property (nonatomic) BOOL isPasswordProtacted;
@property (nonatomic, copy) NSString * _Nonnull passwordString;
@property (nonatomic) BOOL shouldContinueBlinking;
@property (nonatomic, readonly, strong) UIFont * _Null_unspecified font;
@property (nonatomic) CGFloat startY;
@property (nonatomic) BOOL firstTimeTextEntered;
@property (nonatomic, readonly, strong) UILabel * _Nonnull textLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)resetInitialization;
- (void)toggleBlinkState;
@property (nonatomic, readonly) BOOL hasText;
- (void)insertText:(NSString * _Nonnull)text;
- (void)deleteBackward;
- (void)updateLabelFrameWithText:(NSString * _Nonnull)text;
- (void)updateBlinkFrame;
- (UIButton * _Nonnull)blinkView SWIFT_WARN_UNUSED_RESULT;
- (void)blinkAnimationWithTarget:(UIView * _Nonnull)target;
- (void)setTextState;
- (NSString * _Nonnull)getText SWIFT_WARN_UNUSED_RESULT;
- (CGRect)rectForTextWithInsetWithInset:(CGFloat)inset SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
